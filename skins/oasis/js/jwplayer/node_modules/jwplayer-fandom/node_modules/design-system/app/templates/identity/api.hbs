<h1>API</h1>
<p>
	API that returns content for Global Navigation and Footer was introduced to keep consistency across different platforms.
	It's recommended for every integration to use this API to make sure that content is the same and future changes are going to be reflected on every platform.
</p>
<p>To render the Global Navigation and the Global Footer you need to:</p>
<ul>
	<li>{{#link-to 'overview.quick-start'}}Install Design System{{/link-to}}</li>
	<li>Install localization messages</li>
	<li>Fetch the data from the Design System API</li>
	<li>Render HTML based on the data</li>
	<li>Implement interactions using JavaScript (Global Navigation only)</li>
</ul>

<section>
	<h2 id="fetch-data">Fetch the data</h2>
	<p>
		To fetch the data you should send a request to the Design System API.
		URL consists of the following parts (using
		<a href="http://www.wikia.com/api/v1/design-system/wikis/831/en/global-footer" target="_blank">http://www.wikia.com/api/v1/design-system/wikis/831/en/global-footer</a>
		as an example):
	</p>
	<ul>
		<li><code class="format-code">http://www.wikia.com/api/v1/design-system/</code> — root path</li>
		<li><code class="format-code">wikis/</code> or <code class="format-code">fandoms</code> — name of the product</li>
		<li><code class="format-code">813/</code> — id of the product instance, e.g. wiki id</li>
		<li><code class="format-code">en/</code> — language of the UI (content language is derived from the product instance id)</li>
		<li><code class="format-code">global-footer</code> or <code class="format-code">global-navigation</code> — optional name of the element, if left out then all elements are returned</li>
	</ul>
	<p>
		Source code for the API and its data models are available here:
		<a href="https://github.com/Wikia/app/blob/dev/includes/wikia/api/DesignSystemApiController.class.php" target="_blank">https://github.com/Wikia/app/blob/dev/includes/wikia/api/DesignSystemApiController.class.php</a>
	</p>
</section>

<section>
	<h2 id="schema">API output schema</h2>
	<p>
		We use JSON schema to describe how the API output looks like and use it to run the API tests.
		You can see both the tests and schema at
		<a href="https://github.com/Wikia/api-tests/tree/master/apitests/DesignSystem" target="_blank">https://github.com/Wikia/api-tests/tree/master/apitests/DesignSystem</a>
	</p>
</section>

<section>
	<h2 id="render-html">Render HTML based on the data</h2>
	<p>
		See all the variants of the final markup on {{#link-to 'identity.global-navigation'}}Global Navigation{{/link-to}}
		and {{#link-to 'identity.global-footer'}}Global Footer{{/link-to}} pages.
		To make the implementation easier you can look at the existing ones and use them as examples:
	</p>
	<ul>
		<li><a href="https://github.com/Wikia/mercury/blob/dev/server/app/views/_partials/global-footer/global-footer.hbs" target="_blank">Global Footer in Mercury (Handlebars)</a></li>
		<li><a href="https://github.com/Wikia/mercury/tree/dev/front/main/app/templates/components/design-system" target="_blank">Global Navigation in Mercury (HTMLBars, Ember)</a></li>
		<li><a href="https://github.com/Wikia/app/tree/dev/extensions/wikia/DesignSystem/services">Oasis (MediaWiki, PHP)</a></li>
		<li><a href="https://github.com/Wikia/upstream/tree/dev/wp-content/themes/upstream/modules/design-system" target="_blank">Upstream (Wordpress, PHP)</a></li>
	</ul>

	<p>
		Logic for the Global Footer is straightforward and doesn't require much explanation.
		Logic for the Global Navigation is more complex, here are highlights:
	</p>
	<ul>
		<li>
			For each section (top level property in the API response) with <code class="format-code">links</code> and <code class="format-code">header</code>
			properties we display a dropdown where <code class="format-code">header</code> maps to the dropdown entry-point
			and <code class="format-code">links</code> to the list of links which should be rendered as the dropdown content.
		</li>
		<li>
			For each section with <code class="format-code">links</code> but without <code class="format-code">header</code>
			properties we display links without using a dropdown.
		</li>
		<li>
			Section <code class="format-code">fandom_overview</code> is returned only for the languages
			that have hubs implemented (e.g. <a href="http://fandom.wikia.com/games" target="_blank">http://fandom.wikia.com/games</a> for English).
		</li>
		<li>
			Section <code class="format-code">search</code> has a property <code class="format-code">module</code> with properties:
			<ul>
				<li>
					<code class="format-code">results</code> — URL for the search results page and the name of the search query parameter.
				</li>
				<li>
					<code class="format-code">placeholder-active</code> and <code class="format-code">placeholder-inactive</code>
					 — search input placeholders which should be switched between when user focuses / blurs the input.
				</li>
				<li>
					<code class="format-code">suggestions</code> (optional) — URL for the suggestions API and the name
					of the search query parameter. If this property is not present then the search suggestions should not be initialized.
				</li>
			</ul>
		</li>
		<li>
			API returns either <code class="format-code">user</code> or <code class="format-code">anon</code> section,
			based on the authentication header. Both return a header for the user / anon menu dropdown and a list of links.
		</li>
		<li>
			Part of the links for the user / anon menu are of <code class="format-code">link_authentication</code> type
			which comes with an additional property — <code class="format-code">param-name</code>.
			It can be used in the link's URL to make sure that the user is properly redirected after doing an authentication action.
		</li>
		<li>
			Section <code class="format-code">notifications</code> is returned only for the logged in users. Currently it's not being used.
		</li>
	</ul>
</section>

<section>
	<h2 id="authentication">Authentication</h2>
	<p>
		API returns different content for logged in and anon users. In order to authenticate a request to API you have to add <code class="format-code">access_token</code> cookie in request headers. Correct <code class="format-code">access_token</code> value can be obtained in <a href="https://services.wikia.com/central-swagger-ui/?url=https://services.wikia.com/auth/swagger.json#!/token/login">Auth service</a> after providing correct credentials.
	</p>
	<p>
		Example in JS:
		{{#code-sample language='html'}}
this.headers = {
	Cookie: `access_token=${this.request.state.access_token}`
};
		{{/code-sample}}
	</p>
</section>

<section>
	<h2 id="localization">Localization</h2>
	<p>
		The Design System API returns i18n keys which then need to be matched to the translated strings in particular language.
		You should use <a href="https://github.com/Wikia/design-system-i18n" target="_blank">https://github.com/Wikia/design-system-i18n</a>
		as the source of messages. When there is a need for parameter in a message, we use the format
		<code class="format-code">__placeholder__</code>. It's ready for use with the i18next library but might need
		a conversion for other libraries. See how we
		<a href="https://github.com/Wikia/app/blob/dev/extensions/wikia/DesignSystem/i18n/build.js" target="_blank">convert them for MediaWiki</a>.
	</p>
	<p>
		Text returned from the API can come in a few different formats defined by the schema.
		Clients should check the type property and render the text accordingly.
		You can see an example of implementation for this in
		<a href="https://github.com/Wikia/app/blob/dev/extensions/wikia/DesignSystem/DesignSystemHelper.class.php">DesignSystemHelper::renderText()</a>.
		The types are:
	</p>
	<ul>
		<li>
			<code class="format-code">type: text</code> — raw string, escape HTML special characters and render the result.
		</li>
		<li>
			<code class="format-code">type: translatable-text</code>
			<ul>
				<li>
					<code class="format-code">params</code> property is set — translate the text, render each param recursively,
					replace placeholders with the results, escape HTML special characters and render the end result.
					Parameters are texts and the same rules described here apply to each of them.
				</li>
				<li>
					<code class="format-code">params</code> property is not set — translate the text,
					escape HTML special characters and render the result.
				</li>
			</ul>
		</li>
		<li>
			<code class="format-code">type: link-text</code> — create a link using <code class="format-code">href</code>
			property and render the text using <code class="format-code">title</code> property while applying the rules above.
		</li>
	</ul>
</section>

<section>
	<h2 id="interactions">Interactions</h2>
	<p>
		Design System doesn't provide JavaScript for handling interactions, so you need to implement them yourself.
		There are no interactions for the Global Footer. You can find the list of interactions for the Global Navigation
		on the {{#link-to 'identity.global-navigation'}}component's page{{/link-to}}.
	</p>
</section>
